data Maybe(a: Type) where {
  Just(x: a);
  Nothing;
}

def map('a 'b, f: a -> b, xs: Maybe(a)) = case xs of {
  Just(x) -> Just(f(x));
  Nothing -> Nothing;
}

%typeof \(x: Type) (y:Type) -> map(a=x,b=y)

def maybe('a 'b, x, f: a -> b, xs: Maybe(a)) = case xs of {
  Just(x) -> f(x);
  Nothing -> x;
}

%typeof maybe